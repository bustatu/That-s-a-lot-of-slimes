<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

//Timer
timer = 0
rate = 5
counti = 3
updated = true
count = counti
counter = 0
damage_count = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Step

//If not paused
if(!obj_plr.paused)
{
    //Coordonates are the same as player's
    x = obj_plr.x
    y = obj_plr.y
    
    //Update timer
    timer += adelta_time
    
    //Spawn a slime
    if(floor(timer) % rate == 0)
    {
        while(count--)
        {
            randomize()
            var px = x + view_wview[0] / 2 - random(view_wview[0])
            var py = y + view_hview[0] / 2 - random(view_hview[0])
            while(point_distance(px, py, obj_plr.x, obj_plr.y) &lt;= 100)
            {
                randomize()
                px = x + view_wview[0] / 2 - random(view_wview[0])
                py = y + view_hview[0] / 2 - random(view_hview[0])            
            }
            randomize()
            switch(choose(0,0,0,0,1,1,2))
            {
                case 0:
                {
                    instance_create(px, py, obj_slime_normal)
                    break;
                }
                case 1:
                {
                    instance_create(px, py, obj_slime_medium)
                    break;
                }
                case 2:
                {
                    instance_create(px, py, obj_slime_big)
                    break;
                }
            }    
        }
        if(!updated)
        {
            counti++
            updated = true
        }
    }
    else 
    {
        count = counti
        updated = false
    }
}

/*if(instance_number(obj_slime_base) == 0)
{
    instance_destroy()
}*/


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI

draw_set_font(f_text)
draw_set_color(c_black)
draw_rectangle(5, 5, string_width("Time passed: " + string(timer) + " s") + 10, 45, false)

draw_set_color(c_gray)
draw_rectangle(5, 5, string_width("Time passed: " + string(timer) + " s") + 10, 45, true)

draw_set_color(c_white)
draw_text(10, 10, "Time passed: " + string(timer) + " s")

draw_set_color(c_black)
draw_rectangle(605, 5, 610 + string_width("Slimes killed: " + string(counter)), 45, false)

draw_set_color(c_gray)
draw_rectangle(605, 5, 610 + string_width("Slimes killed: " + string(counter)), 45, true)

draw_set_color(c_white)
draw_text(610, 10, "Slimes killed: " + string(counter))

draw_set_color(c_black)
draw_rectangle(605, 55, 610 + string_width("Damage taken: " + string(damage_count)), 95, false)

draw_set_color(c_gray)
draw_rectangle(605, 55, 610 + string_width("Damage taken: " + string(damage_count)), 95, true)

draw_set_color(c_white)
draw_text(610, 60, "Damage taken: " + string(damage_count))

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
