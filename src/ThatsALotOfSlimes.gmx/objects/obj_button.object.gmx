<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create

b_size_x = 50
b_size_y = 50
bk_color = make_color_rgb(0, 0, 0)
bk_color_selected = make_color_rgb(50, 50, 50)
brd_color = make_color_rgb(255, 255, 255)
text_color = make_color_rgb(255, 255, 255)
text = "&lt;text&gt;"
text_font = f_text
execution_id = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw GUI

if(obj_cursor.actual_x&gt;=x&amp;&amp;obj_cursor.actual_x&lt;=x+b_size_x&amp;&amp;obj_cursor.actual_y&gt;=y&amp;&amp;obj_cursor.actual_y&lt;=y+b_size_y)
{
    draw_set_color(bk_color_selected)
    obj_cursor.image_index = 1
    if(gamepad_is_connected(0))
    {
        if(gamepad_button_check_pressed(0, obj_settings.gp_attack))
        {
            b_execute_event(execution_id)
        }
    }
    else if(mouse_check_button_pressed(obj_settings.mouse_attack))
    {
        b_execute_event(execution_id)
    }
}
else {
    draw_set_color(bk_color)
}
draw_rectangle(x, y, x + b_size_x, y + b_size_y, false)

draw_set_color(brd_color)
draw_rectangle(x, y, x + b_size_x, y + b_size_y, true)

draw_set_font(text_font)
draw_set_color(text_color)
draw_text(x + b_size_x / 2 - string_width(text) / 2, y + b_size_y / 2 - string_height(text) / 2, text)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
